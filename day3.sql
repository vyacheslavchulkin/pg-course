-- Structured Query Language - HW day 3
-- Find free slots
-- Найти по 5 ближайших доступных слотов для записи для каждой из услуг.
--
-- Входные данные
-- Таблица услуг: содержит название услуги, имя врача и продолжительность данной услуги.
--
-- drop table if exists service;
-- create table service (
--   id int primary key
--   , name text           -- Название услуги
--   , practitioner text   -- Врач
--   , duration interval   -- Продолжительность
-- );
--
-- insert into service (id, name, practitioner, duration)
-- values  (1, 'Прием терапевта', 'Иванова И. В.', '30 min'::interval)
--      ,(2, 'Прием педиатра',  'Смирнова Т. Е.', '20 min'::interval);
-- Таблица правил расписаний: в данной таблице указан период действия данного расписания, услуга, 4
-- оказываемая в рамках данного расписания и правила генерации слотов для записи.
-- В рамках одного расписания может быть несколько правил.
--
--    drop table if exists schedule;
-- create table schedule(
--   id serial primary key
--   , start date    -- Начало действия расписания
--   , "end" date    -- Конец действия расписания
--   , rule jsonb    -- Правило генерации
--   , service int   -- Услуга
-- );
--
-- insert into schedule (start, "end", service, rule)
-- values
--   ('2021-05-01', '2021-05-20', 1,
--    $$
--    [{"dow":   "mon",
--      "start": "08:00:00",
--      "end":   "13:00:00"}]
--    $$),
--
--   ('2021-05-06', '2021-05-30', 2,
--    $$
--    [{"dow":   "wed",
--      "start": "10:00:00",
--      "end":   "13:00:00"}
--    ,{"dow":   "wed",
--      "start": "15:00:00",
--      "end":   "16:00:00"}]
--    $$);
-- Пример данных:
--
-- |      start |        end | rule                                                     | service |
-- |------------+------------+----------------------------------------------------------+---------|
-- | 2021-05-01 | 2021-05-20 | [{"dow": "mon", "end": "13:00:00", "start": "08:00:00"}] |       1 |
--
--
-- T.E. данную запись можно интерпретировать следующим образом:
-- для услуги Прием терапевта доступно расписание с 2021-05-01 по 2021-05-20 по понедельникам
-- с 8 утра и до 13 дня продолжительностью 30 мин
--
-- Таблица визитов: в данной таблице указаны услуги и занятые интервалы времени
--
-- drop table if exists appointment;
-- create table appointment (
--   id serial primary key
--   , service int       -- Услуга
--   , period tstzrange  -- Занятый период времени
-- );
--
-- insert into appointment (service, period)
-- values
-- (1, '[2021-05-03 07:45, 2021-05-03 12:35]')
--      ,(1, '[2021-05-10 08:35, 2021-05-10 10:20]')
--      ,(2, '[2021-05-12 09:30, 2021-05-12 12:45]')
--   Ожидаемый результат
--
--     | name            | practitioner   | duration | period                                              |
--     |-----------------+----------------+----------+-----------------------------------------------------|
--     | Прием терапевта | Иванова И. В.  | 00:30:00 | ["2021-05-10 08:00:00+00","2021-05-10 08:30:00+00") |
--     | Прием терапевта | Иванова И. В.  | 00:30:00 | ["2021-05-10 10:30:00+00","2021-05-10 11:00:00+00") |
--     | Прием терапевта | Иванова И. В.  | 00:30:00 | ["2021-05-10 11:00:00+00","2021-05-10 11:30:00+00") |
--     | Прием терапевта | Иванова И. В.  | 00:30:00 | ["2021-05-10 11:30:00+00","2021-05-10 12:00:00+00") |
--     | Прием терапевта | Иванова И. В.  | 00:30:00 | ["2021-05-10 12:00:00+00","2021-05-10 12:30:00+00") |
--     | Прием педиатра  | Смирнова Т. Е. | 00:20:00 | ["2021-05-12 15:00:00+00","2021-05-12 15:20:00+00") |
--     | Прием педиатра  | Смирнова Т. Е. | 00:20:00 | ["2021-05-12 15:20:00+00","2021-05-12 15:40:00+00") |
--     | Прием педиатра  | Смирнова Т. Е. | 00:20:00 | ["2021-05-12 15:40:00+00","2021-05-12 16:00:00+00") |
--     | Прием педиатра  | Смирнова Т. Е. | 00:20:00 | ["2021-05-19 10:00:00+00","2021-05-19 10:20:00+00") |
--     | Прием педиатра  | Смирнова Т. Е. | 00:20:00 | ["2021-05-19 10:20:00+00","2021-05-19 10:40:00+00") |

with s as (
  select name,
         practitioner,
         duration::time,
         p as period,
         a.service,
         row_number() over (partition by service.id order by i) as rownum

  from service
         left join schedule on schedule.service = service.id
         cross join generate_series(start, "end", duration) as series(i)
         cross join tstzrange(i, (i + duration)) as period(p)
         cross join jsonb_array_elements(rule) as rules(r)

         left join (
    select service, array_agg(period) as busy_period
    from appointment
    group by service
  ) a on service.id = a.service

  where i::time between (r ->> 'start')::time and ((r ->> 'end')::time - duration)
    and r ->> 'dow' = to_char(i, 'dy')
    and not p && any (busy_period)
  order by i
)

select name, practitioner, duration, period
from s
where rownum < 6;